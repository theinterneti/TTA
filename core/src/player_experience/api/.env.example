# TTA Player Experience API Environment Variables
# Copy this file to .env and fill in the actual values

# =============================================================================
# SECURITY SETTINGS (REQUIRED)
# =============================================================================

# JWT Secret Key - MUST be a strong, random string (minimum 32 characters)
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production-minimum-32-chars

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# Neo4j Database Configuration
NEO4J_URL=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-strong-neo4j-password-change-this

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password-if-required

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment (development, production, test)
ENVIRONMENT=development

# Development Mode Settings
TTA_DEVELOPMENT_MODE=true
TTA_USE_MOCKS=false
TTA_USE_NEO4J=1

# =============================================================================
# CORS SETTINGS
# =============================================================================

# Comma-separated list of allowed origins
API_CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# TESTING ENVIRONMENT VARIABLES (for test environment only)
# =============================================================================

# Test-specific Neo4j password
NEO4J_TEST_PASSWORD=testpassword

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit actual secrets to version control
# 2. Use strong, unique passwords for all services
# 3. Rotate secrets regularly in production
# 4. Consider using a secret management service like HashiCorp Vault or AWS Secrets Manager
# 5. Ensure JWT_SECRET_KEY is at least 32 characters long and cryptographically random
