version: '3.8'
services:
  analytics-aggregation:
    build:
      context: .
      dockerfile: src/analytics/Dockerfile.aggregation
    container_name: tta-analytics-aggregation
    ports:
    - 8095:8095
    environment:
    - PYTHONPATH=/app
    - LOG_LEVEL=INFO
    - REDIS_URL=redis://tta-analytics-redis:6379
    - POSTGRES_URL=postgresql://analytics:analytics_password@tta-analytics-postgres:5432/tta_analytics
    depends_on:
    - tta-analytics-redis
    - tta-analytics-postgres
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8095/health
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
    read_only: true
  analytics-reporting:
    build:
      context: .
      dockerfile: src/analytics/Dockerfile.reporting
    container_name: tta-analytics-reporting
    ports:
    - 8096:8096
    environment:
    - PYTHONPATH=/app
    - LOG_LEVEL=INFO
    - REDIS_URL=redis://tta-analytics-redis:6379
    - POSTGRES_URL=postgresql://analytics:analytics_password@tta-analytics-postgres:5432/tta_analytics
    depends_on:
    - tta-analytics-redis
    - tta-analytics-postgres
    networks:
    - tta-analytics
    restart: unless-stopped
    volumes:
    - ./reports:/app/reports
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8096/health
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
    read_only: true
  analytics-monitoring:
    build:
      context: .
      dockerfile: src/analytics/Dockerfile.monitoring
    container_name: tta-analytics-monitoring
    ports:
    - 8097:8097
    environment:
    - PYTHONPATH=/app
    - LOG_LEVEL=INFO
    - REDIS_URL=redis://tta-analytics-redis:6379
    - POSTGRES_URL=postgresql://analytics:analytics_password@tta-analytics-postgres:5432/tta_analytics
    - SMTP_HOST=smtp.gmail.com
    - SMTP_PORT=587
    - SMTP_USER=${SMTP_USER:-}
    - SMTP_PASSWORD=${SMTP_PASSWORD:-}
    depends_on:
    - tta-analytics-redis
    - tta-analytics-postgres
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8097/health
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
    read_only: true
  tta-analytics-postgres:
    image: postgres:15-alpine
    container_name: tta-analytics-postgres
    environment:
      POSTGRES_DB: tta_analytics
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics_password
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
    - 5434:5432
    volumes:
    - analytics_postgres_data:/var/lib/postgresql/data
    - ./src/analytics/database/analytics_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U analytics -d tta_analytics
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
    - no-new-privileges:true
  tta-analytics-redis:
    image: redis:7-alpine
    container_name: tta-analytics-redis
    ports:
    - 6381:6379
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
    - analytics_redis_data:/data
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
  tta-analytics-prometheus:
    image: prom/prometheus:latest
    container_name: tta-analytics-prometheus
    ports:
    - 9092:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --storage.tsdb.retention.time=30d
    - --web.enable-lifecycle
    volumes:
    - ./src/analytics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - analytics_prometheus_data:/prometheus
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost:9090/-/healthy
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
  tta-analytics-grafana:
    image: grafana/grafana:latest
    container_name: tta-analytics-grafana
    ports:
    - 3004:3000
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=analytics-admin-2024
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
    - analytics_grafana_data:/var/lib/grafana
    - ./src/analytics/grafana/provisioning:/etc/grafana/provisioning
    - ./src/analytics/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
    - tta-analytics
    depends_on:
    - tta-analytics-prometheus
    restart: unless-stopped
    healthcheck:
      test:
      - CMD-SHELL
      - curl -f http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
  analytics-gateway:
    image: nginx:alpine
    container_name: tta-analytics-gateway
    ports:
    - 8098:80
    volumes:
    - ./src/analytics/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
    - analytics-aggregation
    - analytics-reporting
    - analytics-monitoring
    networks:
    - tta-analytics
    restart: unless-stopped
    healthcheck:
      test:
      - CMD
      - wget
      - --no-verbose
      - --tries=1
      - --spider
      - http://localhost/health
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
    - no-new-privileges:true
    read_only: true
networks:
  tta-analytics:
    driver: bridge
    name: tta-analytics-network
volumes:
  analytics_postgres_data:
    driver: local
  analytics_redis_data:
    driver: local
  analytics_prometheus_data:
    driver: local
  analytics_grafana_data:
    driver: local
