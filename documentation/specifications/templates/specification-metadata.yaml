# Specification Metadata Template
# This file contains structured metadata for specification management

specification:
  name: "{SPECIFICATION_NAME}"
  version: "{SPEC_VERSION}"
  status: "{STATUS_INDICATOR}"  # ‚úÖ OPERATIONAL, üöß IN_PROGRESS, ‚ùå OUTDATED, üìã PLANNED
  category: "{CATEGORY}"  # therapeutic-systems, web-interfaces, infrastructure, ai-orchestration, shared-components
  priority: "{PRIORITY}"  # critical, high, medium, low
  
  # Ownership and accountability
  owner: "{SPECIFICATION_OWNER}"
  reviewer: "{LAST_REVIEWER}"
  last_updated: "{LAST_UPDATED}"
  next_review: "{NEXT_REVIEW_DATE}"
  
  # Implementation tracking
  implementation:
    status: "{IMPLEMENTATION_STATUS}"  # not-started, in-progress, completed, deprecated
    completion_percentage: {COMPLETION_PERCENTAGE}  # 0-100
    files:
      - path: "{IMPLEMENTATION_FILE_PATH}"
        type: "{FILE_TYPE}"  # source, test, config, documentation
        coverage: {COVERAGE_PERCENTAGE}
    
    # API endpoints if applicable
    endpoints:
      - path: "{API_ENDPOINT_PATH}"
        method: "{HTTP_METHOD}"
        status: "{ENDPOINT_STATUS}"  # implemented, planned, deprecated
    
    # Database schema if applicable
    database:
      tables: []
      migrations: []
      indexes: []
  
  # Testing information
  testing:
    unit_tests:
      files: []
      coverage_target: {COVERAGE_TARGET}
      current_coverage: {CURRENT_COVERAGE}
    
    integration_tests:
      files: []
      dependencies: []
    
    e2e_tests:
      scenarios: []
      user_journeys: []
  
  # Performance requirements
  performance:
    response_time: "{RESPONSE_TIME_REQUIREMENT}"
    throughput: "{THROUGHPUT_REQUIREMENT}"
    resource_limits: "{RESOURCE_CONSTRAINTS}"
    benchmarks: []
  
  # Security and compliance
  security:
    authentication_required: {AUTH_REQUIRED}  # true/false
    authorization_levels: []
    hipaa_compliant: {HIPAA_COMPLIANT}  # true/false
    data_classification: "{DATA_CLASSIFICATION}"  # public, internal, confidential, restricted
  
  # Dependencies and relationships
  dependencies:
    specifications: []  # List of specification IDs this depends on
    external_services: []
    infrastructure: []
  
  dependents:
    specifications: []  # List of specification IDs that depend on this
    components: []
  
  # Change tracking
  changelog:
    - version: "{VERSION}"
      date: "{CHANGE_DATE}"
      changes: "{CHANGE_DESCRIPTION}"
      impact: "{CHANGE_IMPACT}"
      migration_notes: "{MIGRATION_NOTES}"
  
  # Quality metrics
  quality:
    completeness_score: {COMPLETENESS_SCORE}  # 0-100
    alignment_score: {ALIGNMENT_SCORE}  # 0-100
    last_validation: "{LAST_VALIDATION_DATE}"
    validation_issues: []
  
  # Automation flags
  automation:
    ci_checks_enabled: {CI_CHECKS_ENABLED}  # true/false
    auto_version_bump: {AUTO_VERSION_BUMP}  # true/false
    notification_channels: []
    
# Template metadata
template:
  version: "1.0.0"
  last_updated: "{TEMPLATE_LAST_UPDATED}"
  schema_version: "1.0"
  
# Validation rules
validation:
  required_fields:
    - specification.name
    - specification.version
    - specification.status
    - specification.category
    - specification.owner
    - specification.last_updated
  
  status_values:
    - "‚úÖ OPERATIONAL"
    - "üöß IN_PROGRESS" 
    - "‚ùå OUTDATED"
    - "üìã PLANNED"
  
  category_values:
    - "therapeutic-systems"
    - "web-interfaces"
    - "infrastructure"
    - "ai-orchestration"
    - "shared-components"
  
  priority_values:
    - "critical"
    - "high"
    - "medium"
    - "low"
