# TTA QA Testing Container
# Comprehensive testing environment for home lab quality assurance

FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for frontend testing
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install Playwright dependencies
RUN apt-get update && apt-get install -y \
    libnss3 \
    libnspr4 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY testing/requirements.txt /app/requirements.txt
COPY testing/extended_evaluation/requirements.txt /app/extended_requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir -r extended_requirements.txt

# Install additional QA testing dependencies
RUN pip install --no-cache-dir \
    playwright==1.40.0 \
    locust==2.17.0 \
    selenium==4.15.0 \
    requests==2.31.0 \
    websockets==12.0 \
    asyncio-mqtt==0.13.0 \
    prometheus-client==0.19.0

# Install Playwright browsers
RUN playwright install chromium firefox webkit

# Copy testing code
COPY testing/ /app/testing/
COPY src/ /app/src/

# Create directories for test results and logs
RUN mkdir -p /app/test-results /app/logs /app/qa-reports

# Set Python path
ENV PYTHONPATH=/app

# Create non-root user for security
RUN useradd -m -u 1000 qauser && chown -R qauser:qauser /app
USER qauser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command (can be overridden)
CMD ["python", "-m", "testing.qa_test_runner"]
