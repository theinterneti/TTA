services:
  player-experience-api:
    build:
      context: ../..
      dockerfile: src/player_experience/Dockerfile
    container_name: tta-player-experience-api
    ports:
      - 8080:8080
    environment:
      - ENVIRONMENT=production
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_REDIS_URL=redis://redis:6379
      - API_NEO4J_URL=bolt://neo4j:7687
      - API_NEO4J_USERNAME=neo4j
      - API_NEO4J_PASSWORD=password
      - API_JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - API_CORS_ORIGINS=http://localhost:3000,https://localhost:3000
    depends_on:
      - redis
      - neo4j
    networks:
      - tta-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
  redis:
    image: redis:7.2.4-alpine3.19
    container_name: tta-player-experience-redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - tta-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
  neo4j:
    image: neo4j:5.15-community
    container_name: tta-player-experience-neo4j
    ports:
      - 7687:7687
      - 7474:7474
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j-data:/data
    networks:
      - tta-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
volumes:
  redis-data: null
  neo4j-data: null
networks:
  tta-network:
    driver: bridge
