version: "3.8"
networks:
  tta-homelab:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
volumes:
  neo4j-data: null
  neo4j-logs: null
  neo4j-conf: null
  redis-data: null
  postgres-data: null
  grafana-data: null
  prometheus-data: null
services:
  neo4j:
    image: neo4j:5.13.0
    container_name: tta-homelab-neo4j
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-conf:/conf
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-homelab_neo4j_pass}
      NEO4J_PLUGINS: apoc
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_server_memory_heap_initial__size: 1G
      NEO4J_server_memory_heap_max__size: 4G
      NEO4J_server_memory_pagecache_size: 2G
      NEO4J_dbms_default__listen__address: 0.0.0.0
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - cypher-shell
        - -u
        - neo4j
        - -p
        - ${NEO4J_PASSWORD:-homelab_neo4j_pass}
        - RETURN 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    security_opt:
      - no-new-privileges:true
  redis:
    image: redis:7.2-alpine
    container_name: tta-homelab-redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 3
    security_opt:
      - no-new-privileges:true
  postgres:
    image: postgres:15-alpine
    container_name: tta-homelab-postgres
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tta_homelab}
      POSTGRES_USER: ${POSTGRES_USER:-tta_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-homelab_postgres_pass}
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-tta_user} -d ${POSTGRES_DB:-tta_homelab}
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
  player-api:
    build:
      context: .
      dockerfile: src/player_experience/api/Dockerfile
    container_name: tta-homelab-player-api
    ports:
      - 8080:8080
    environment:
      - ENVIRONMENT=homelab
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - DATABASE_URL=postgresql://${POSTGRES_USER:-tta_user}:${POSTGRES_PASSWORD:-homelab_postgres_pass}@postgres:5432/${POSTGRES_DB:-tta_homelab}
      - REDIS_URL=redis://redis:6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-homelab_neo4j_pass}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-homelab_jwt_secret_key_minimum_32_chars}
      - API_CORS_ORIGINS=http://localhost:3000,http://localhost:80,http://player-frontend:3000
      - MAX_CONCURRENT_SESSIONS=50
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
  player-frontend:
    build:
      context: src/player_experience/frontend
      dockerfile: Dockerfile
    container_name: tta-homelab-player-frontend
    ports:
      - 3000:3000
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_WS_URL=http://localhost:8080
      - REACT_APP_DEBUG=true
    volumes:
      - ./src/player_experience/frontend/src:/app/src
    depends_on:
      - player-api
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:3000
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
  nginx:
    image: nginx:alpine
    container_name: tta-homelab-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/homelab.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - player-api
      - player-frontend
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost/health
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
  prometheus:
    image: prom/prometheus:v2.48.1:latest
    container_name: tta-homelab-prometheus
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=30d
      - --web.enable-lifecycle
    networks:
      - tta-homelab
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
  grafana:
    image: grafana/grafana:10.2.3:10.2.3
    container_name: tta-homelab-grafana
    ports:
      - 3001:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-homelab_grafana_admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=redis-datasource
    depends_on:
      - prometheus
    networks:
      - tta-homelab
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
  simulation-framework:
    build:
      context: testing/simulation
      dockerfile: Dockerfile
    container_name: tta-homelab-simulation-framework
    ports:
      - 3002:3002
    volumes:
      - ./testing/simulation:/app
      - ./test-results:/app/reports
      - ./logs:/app/logs
    environment:
      - NODE_ENV=production
      - ENVIRONMENT=homelab
      - PORT=3002
      - HOST=0.0.0.0
      - API_BASE_URL=http://player-api:8080
      - FRONTEND_BASE_URL=http://player-frontend:3000
      - REDIS_URL=redis://redis:6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-homelab_neo4j_pass}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - LOG_LEVEL=INFO
      - SIMULATION_DATA_PATH=/app/data
      - SIMULATION_REPORTS_PATH=/app/reports
    depends_on:
      - player-api
      - player-frontend
      - redis
      - neo4j
    networks:
      - tta-homelab
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:3002/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
  qa-test-runner:
    build:
      context: .
      dockerfile: testing/Dockerfile.qa
    container_name: tta-homelab-qa-runner
    volumes:
      - ./testing:/app/testing
      - ./test-results:/app/test-results
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=homelab
      - API_BASE_URL=http://player-api:8080
      - FRONTEND_BASE_URL=http://player-frontend:3000
      - REDIS_URL=redis://redis:6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-homelab_neo4j_pass}
      - CONCURRENT_USERS=10
      - TEST_DURATION_MINUTES=60
    depends_on:
      - player-api
      - player-frontend
      - redis
      - neo4j
    networks:
      - tta-homelab
    profiles:
      - testing
    command: tail -f /dev/null
    security_opt:
      - no-new-privileges:true
  load-tester:
    image: locustio/locust:latest
    container_name: tta-homelab-load-tester
    ports:
      - 8089:8089
    volumes:
      - ./testing/load_tests:/mnt/locust
    environment:
      - LOCUST_HOST=http://nginx
      - LOCUST_LOCUSTFILE=/mnt/locust/locustfile.py
    depends_on:
      - nginx
    networks:
      - tta-homelab
    profiles:
      - load-testing
    command: locust --web-host=0.0.0.0 --web-port=8089
    security_opt:
      - no-new-privileges:true
    read_only: true
