name: Security Scan

on:
  push:
    branches: [ main, develop, integration/*, feat/production-deployment-infrastructure ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    if: vars.ENABLE_SECURITY_SCANNING == 'true'

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd src/player_experience/frontend
          npm ci

      - name: Run npm audit
        run: |
          echo "Running npm audit for root dependencies..."
          npm audit --audit-level=moderate --json > npm-audit-root.json || true
          
          echo "Running npm audit for frontend dependencies..."
          cd src/player_experience/frontend
          npm audit --audit-level=moderate --json > ../../../npm-audit-frontend.json || true

      - name: Run Semgrep security scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/javascript
            p/typescript
            p/react
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for high-severity vulnerabilities
        run: |
          echo "Checking for high-severity vulnerabilities..."
          
          # Check npm audit results
          if [ -f "npm-audit-root.json" ]; then
            HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' npm-audit-root.json)
            CRITICAL_VULNS=$(jq '.metadata.vulnerabilities.critical // 0' npm-audit-root.json)
            echo "Root dependencies - High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
            
            if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
              echo "❌ High or critical vulnerabilities found in root dependencies"
              echo "high_vulns_found=true" >> $GITHUB_ENV
            fi
          fi
          
          if [ -f "npm-audit-frontend.json" ]; then
            HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' npm-audit-frontend.json)
            CRITICAL_VULNS=$(jq '.metadata.vulnerabilities.critical // 0' npm-audit-frontend.json)
            echo "Frontend dependencies - High: $HIGH_VULNS, Critical: $CRITICAL_VULNS"
            
            if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
              echo "❌ High or critical vulnerabilities found in frontend dependencies"
              echo "high_vulns_found=true" >> $GITHUB_ENV
            fi
          fi

      - name: Generate security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "" >> security-report.md
          echo "**Scan Date:** $(date -u)" >> security-report.md
          echo "**Branch:** ${{ github.ref_name }}" >> security-report.md
          echo "**Commit:** ${{ github.sha }}" >> security-report.md
          echo "" >> security-report.md
          
          echo "## NPM Audit Results" >> security-report.md
          if [ -f "npm-audit-root.json" ]; then
            echo "### Root Dependencies" >> security-report.md
            jq -r '.metadata.vulnerabilities | to_entries[] | "- \(.key | ascii_upcase): \(.value)"' npm-audit-root.json >> security-report.md
          fi
          
          if [ -f "npm-audit-frontend.json" ]; then
            echo "### Frontend Dependencies" >> security-report.md
            jq -r '.metadata.vulnerabilities | to_entries[] | "- \(.key | ascii_upcase): \(.value)"' npm-audit-frontend.json >> security-report.md
          fi
          
          echo "" >> security-report.md
          echo "## Recommendations" >> security-report.md
          echo "- Review and update vulnerable dependencies" >> security-report.md
          echo "- Run \`npm audit fix\` to automatically fix issues" >> security-report.md
          echo "- Check GitHub Security tab for detailed vulnerability information" >> security-report.md

      - name: Upload security artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: |
            npm-audit-*.json
            trivy-results.sarif
            security-report.md
          retention-days: 30

      - name: Fail on high-severity vulnerabilities
        if: env.high_vulns_found == 'true'
        run: |
          echo "❌ High or critical security vulnerabilities found!"
          echo "Please review the security report and fix vulnerabilities before proceeding."
          exit 1

      - name: Notify security issues
        if: failure() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            🚨 Security vulnerabilities detected!
            
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            
            Please review the security scan results and address vulnerabilities.
            [View Results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
          deny-licenses: GPL-2.0, GPL-3.0

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-review, secrets-scan]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download security artifacts
        uses: actions/download-artifact@v4
        with:
          name: security-scan-results
          path: security-results/

      - name: Generate consolidated security report
        run: |
          echo "# TTA Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Scan Date:** $(date -u)" >> security-summary.md
          echo "**Branch:** ${{ github.ref_name }}" >> security-summary.md
          echo "**Commit:** ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          # Check job results
          if [[ "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ **Vulnerability Scan:** Passed" >> security-summary.md
          else
            echo "❌ **Vulnerability Scan:** Failed" >> security-summary.md
          fi
          
          if [[ "${{ needs.dependency-review.result }}" == "success" ]]; then
            echo "✅ **Dependency Review:** Passed" >> security-summary.md
          else
            echo "❌ **Dependency Review:** Failed" >> security-summary.md
          fi
          
          if [[ "${{ needs.secrets-scan.result }}" == "success" ]]; then
            echo "✅ **Secrets Detection:** Passed" >> security-summary.md
          else
            echo "❌ **Secrets Detection:** Failed" >> security-summary.md
          fi

      - name: Upload consolidated security report
        uses: actions/upload-artifact@v4
        with:
          name: security-summary-report
          path: security-summary.md
          retention-days: 30

      - name: Comment PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('security-summary.md')) {
              const summary = fs.readFileSync('security-summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 🔒 Security Scan Results\n\n${summary}`
              });
            }
