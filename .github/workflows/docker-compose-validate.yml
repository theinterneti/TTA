name: Docker Compose Validation

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**/docker-compose*.yml'
      - '**/docker-compose*.yaml'
      - '.github/workflows/docker-compose-validate.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**/docker-compose*.yml'
      - '**/docker-compose*.yaml'
  workflow_dispatch:

jobs:
  validate:
    name: Validate Docker Compose Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Find Docker Compose files
        id: find-files
        run: |
          # Find all docker-compose files
          compose_files=$(find . -name "docker-compose*.yml" -o -name "docker-compose*.yaml" | grep -v node_modules | grep -v ".git")

          if [ -z "$compose_files" ]; then
            echo "No Docker Compose files found"
            echo "files=" >> $GITHUB_OUTPUT
          else
            echo "Found Docker Compose files:"
            echo "$compose_files"

            # Convert to JSON array
            files_json=$(echo "$compose_files" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "files=$files_json" >> $GITHUB_OUTPUT
          fi

      - name: Validate Docker Compose syntax
        if: steps.find-files.outputs.files != ''
        run: |
          files='${{ steps.find-files.outputs.files }}'

          echo "## Docker Compose Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          all_valid=true

          for file in $(echo "$files" | jq -r '.[]'); do
            echo "Validating: $file"

            if docker-compose -f "$file" config > /dev/null 2>&1; then
              echo "✅ Valid: $file" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Invalid: $file" >> $GITHUB_STEP_SUMMARY
              echo "Error validating $file:"
              docker-compose -f "$file" config 2>&1 || true
              all_valid=false
            fi
          done

          if [ "$all_valid" = false ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "❌ Some Docker Compose files are invalid" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ All Docker Compose files are valid" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for common issues
        if: steps.find-files.outputs.files != ''
        run: |
          files='${{ steps.find-files.outputs.files }}'

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Common Issues Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          for file in $(echo "$files" | jq -r '.[]'); do
            echo "Checking: $file"

            # Check for hardcoded localhost
            if grep -q "localhost" "$file"; then
              echo "⚠️  Warning: $file contains 'localhost' - consider using service names" >> $GITHUB_STEP_SUMMARY
            fi

            # Check for missing health checks
            if ! grep -q "healthcheck:" "$file"; then
              echo "ℹ️  Info: $file has no health checks defined" >> $GITHUB_STEP_SUMMARY
            fi

            # Check for version specification
            if ! grep -q "^version:" "$file"; then
              echo "ℹ️  Info: $file has no version specified (using Compose v2 format)" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Test Docker Compose up (dry-run)
        if: steps.find-files.outputs.files != ''
        run: |
          # Test the main docker-compose.yml if it exists
          if [ -f "docker-compose.yml" ]; then
            echo "Testing docker-compose.yml..."
            docker-compose -f docker-compose.yml config --quiet
            echo "✅ docker-compose.yml is valid and can be parsed"
          fi
