name: TTA Simulation Framework Testing

on:
  push:
    branches: [ main, develop, integration/* ]
    paths:
      - 'testing/simulation/**'
      - 'src/player_experience/**'
      - '.github/workflows/simulation-testing.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'testing/simulation/**'
      - 'src/player_experience/**'
  schedule:
    # Run comprehensive simulation tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of simulation test to run'
        required: true
        default: 'quick'
        type: choice
        options:
          - quick
          - comprehensive
          - production
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - homelab

env:
  NODE_VERSION: '18'
  SIMULATION_TIMEOUT: '3600' # 1 hour timeout

jobs:
  # =============================================================================
  # FRAMEWORK VALIDATION
  # =============================================================================
  validate-framework:
    name: Validate Simulation Framework
    runs-on: ubuntu-latest
    outputs:
      framework-valid: ${{ steps.validation.outputs.valid }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: testing/simulation/package-lock.json

      - name: Install dependencies
        working-directory: testing/simulation
        run: npm ci

      - name: Validate framework
        id: validation
        working-directory: testing/simulation
        run: |
          npm run validate
          echo "valid=true" >> $GITHUB_OUTPUT

      - name: Upload validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: framework-validation-results
          path: testing/simulation/validation-*.log
          retention-days: 7

  # =============================================================================
  # QUICK SIMULATION TESTS
  # =============================================================================
  quick-simulation:
    name: Quick Simulation Test
    runs-on: ubuntu-latest
    needs: validate-framework
    if: needs.validate-framework.outputs.framework-valid == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: testing/simulation/package-lock.json

      - name: Install dependencies
        working-directory: testing/simulation
        run: npm ci

      - name: Run quick simulation test
        working-directory: testing/simulation
        timeout-minutes: 20
        run: |
          echo "🚀 Starting Quick Simulation Test..."
          npm run test:quick
          echo "✅ Quick simulation test completed"

      - name: Upload simulation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quick-simulation-results
          path: |
            testing/simulation/simulation-results-*.json
            testing/simulation/*.log
          retention-days: 30

      - name: Generate test summary
        if: always()
        working-directory: testing/simulation
        run: |
          echo "## 🎮 Quick Simulation Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f simulation-results-*.json ]; then
            echo "✅ Simulation completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "📊 Results saved to artifacts" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Simulation failed or incomplete" >> $GITHUB_STEP_SUMMARY
          fi

  # =============================================================================
  # COMPREHENSIVE SIMULATION TESTS
  # =============================================================================
  comprehensive-simulation:
    name: Comprehensive Simulation Test
    runs-on: ubuntu-latest
    needs: validate-framework
    if: |
      needs.validate-framework.outputs.framework-valid == 'true' &&
      (github.event_name == 'schedule' ||
       github.event.inputs.test_type == 'comprehensive' ||
       github.event.inputs.test_type == 'production')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: testing/simulation/package-lock.json

      - name: Install dependencies
        working-directory: testing/simulation
        run: npm ci

      - name: Run comprehensive simulation test
        working-directory: testing/simulation
        timeout-minutes: 150 # 2.5 hours
        run: |
          echo "🚀 Starting Comprehensive Simulation Test..."
          npm run test:comprehensive
          echo "✅ Comprehensive simulation test completed"

      - name: Generate detailed analysis
        working-directory: testing/simulation
        run: |
          echo "📊 Generating detailed analysis..."
          npm run analyze
          echo "✅ Analysis completed"

      - name: Upload comprehensive results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-simulation-results
          path: |
            testing/simulation/simulation-results-*.json
            testing/simulation/analysis-*.json
            testing/simulation/*.log
            testing/simulation/reports/
          retention-days: 90

      - name: Generate comprehensive summary
        if: always()
        working-directory: testing/simulation
        run: |
          echo "## 🎮 Comprehensive Simulation Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f simulation-results-*.json ]; then
            echo "✅ Comprehensive simulation completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "📊 Detailed results and analysis saved to artifacts" >> $GITHUB_STEP_SUMMARY
            echo "🎯 Check artifacts for full performance metrics" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Comprehensive simulation failed or incomplete" >> $GITHUB_STEP_SUMMARY
          fi

  # =============================================================================
  # PRODUCTION VALIDATION
  # =============================================================================
  production-validation:
    name: Production Validation Test
    runs-on: ubuntu-latest
    needs: [validate-framework, quick-simulation]
    if: |
      needs.validate-framework.outputs.framework-valid == 'true' &&
      github.event.inputs.test_type == 'production' &&
      github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: testing/simulation/package-lock.json

      - name: Install dependencies
        working-directory: testing/simulation
        run: npm ci

      - name: Run production validation
        working-directory: testing/simulation
        timeout-minutes: 300 # 5 hours
        run: |
          echo "🚀 Starting Production Validation Test..."
          npm run test:all
          echo "✅ Production validation completed"

      - name: Generate production report
        working-directory: testing/simulation
        run: |
          echo "📊 Generating production validation report..."
          npm run report
          echo "✅ Production report generated"

      - name: Upload production validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: production-validation-results
          path: |
            testing/simulation/simulation-results-*.json
            testing/simulation/production-report-*.json
            testing/simulation/*.log
            testing/simulation/reports/
          retention-days: 365

      - name: Generate production summary
        if: always()
        working-directory: testing/simulation
        run: |
          echo "## 🎮 Production Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f production-report-*.json ]; then
            echo "✅ Production validation completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "🎯 Platform ready for production deployment" >> $GITHUB_STEP_SUMMARY
            echo "📊 Full validation report saved to artifacts" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Production validation failed" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ Platform NOT ready for production deployment" >> $GITHUB_STEP_SUMMARY
          fi

  # =============================================================================
  # NOTIFICATION AND REPORTING
  # =============================================================================
  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [quick-simulation, comprehensive-simulation, production-validation]
    if: always() && github.event_name == 'schedule'

    steps:
      - name: Generate notification summary
        run: |
          echo "## 📊 TTA Simulation Framework Daily Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.quick-simulation.result }}" == "success" ]; then
            echo "✅ Quick Simulation: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Quick Simulation: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.comprehensive-simulation.result }}" == "success" ]; then
            echo "✅ Comprehensive Simulation: PASSED" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.comprehensive-simulation.result }}" == "skipped" ]; then
            echo "⏭️ Comprehensive Simulation: SKIPPED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Comprehensive Simulation: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Artifacts**: Check workflow artifacts for detailed results" >> $GITHUB_STEP_SUMMARY
