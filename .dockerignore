# TTA Docker Build Context Exclusions
# This file significantly reduces build context size and improves build performance

# Version Control
.git
.gitignore
.gitattributes
.github

# Python
__pycache__
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
venv-*/
venv-staging/

# Node.js and Frontend Build Artifacts
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity
.pnp
.pnp.js
# Exclude frontend build artifacts and source (not needed for API container)
src/player_experience/frontend/
frontend/
dist/
build/

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Testing
.coverage
.pytest_cache/
.tox/
.nox/
htmlcov/
.coverage.*
coverage.xml
*.cover
.hypothesis/

# Documentation
docs/_build/
.readthedocs.yml

# Jupyter Notebook
.ipynb_checkpoints

# Environment Files (keep staging ones)
.env.local
.env.development
.env.test
.env.production

# Logs
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime Data
pids
*.pid
*.seed
*.pid.lock

# Docker
Dockerfile*
docker-compose*.yml
.dockerignore

# Backup Files
*.bak
*.backup
*.tmp
*.temp

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project Specific
uploads/
cache/
tmp/
data/
.pytest_cache/
.mypy_cache/
.ruff_cache/

# Keep only necessary config files
!config/*staging*
!config/redis-staging.conf
!config/neo4j-staging.conf

# Monitoring configs to keep
!monitoring/prometheus-staging.yml
