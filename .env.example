# =============================================================================
# TTA (Therapeutic Text Adventure) Environment Configuration Template
# =============================================================================
# Copy this file to .env and update with your actual values
# This file should be committed to version control as a template
# The actual .env file should NEVER be committed (contains secrets)
# =============================================================================

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
ENVIRONMENT=development
NODE_ENV=development
PYTHONPATH=/app

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Configuration
POSTGRES_DB=tta_db
POSTGRES_USER=tta_user
POSTGRES_PASSWORD=your_secure_postgres_password_here
DATABASE_URL=postgresql://tta_user:your_secure_postgres_password_here@localhost:5432/tta_db

# Redis Configuration
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here
REDIS_DB=0

# Neo4j Configuration
NEO4J_URI=bolt://localhost:7687
NEO4J_URL=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your_neo4j_password_here
NEO4J_DATABASE=neo4j

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================

# OpenRouter (Recommended - Free tier available)
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_SHOW_FREE_ONLY=false
OPENROUTER_PREFER_FREE_MODELS=true
OPENROUTER_MAX_COST_PER_TOKEN=0.001

# OpenRouter OAuth Configuration (for user authentication)
# Get these from: https://openrouter.ai/settings/keys
OPENROUTER_CLIENT_ID=your_openrouter_client_id_here
OPENROUTER_CLIENT_SECRET=your_openrouter_client_secret_here
OPENROUTER_REDIRECT_URI=http://localhost:8080/api/v1/openrouter/auth/oauth/callback

# OpenAI (Optional)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini
OPENAI_MAX_TOKENS=2048
OPENAI_TEMPERATURE=0.7

# Anthropic (Optional)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Local Model Configuration
OLLAMA_BASE_URL=http://localhost:11434
LM_STUDIO_BASE_URL=http://localhost:1234

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_here_minimum_32_characters
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Encryption Keys (Generate with: openssl rand -base64 32)
ENCRYPTION_KEY=your_encryption_key_here_32_bytes_base64_encoded
FERNET_KEY=your_fernet_key_here_32_bytes_base64_encoded

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API Server Settings
API_HOST=0.0.0.0
API_PORT=8080
API_DEBUG=true
API_RELOAD=true
API_LOG_LEVEL=INFO

# CORS Configuration
API_CORS_ORIGINS=http://localhost:3000,http://localhost:8080,https://localhost:3000,https://localhost:8080

# Rate Limiting
API_RATE_LIMIT_CALLS=100
API_RATE_LIMIT_PERIOD=60

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# React App Configuration
REACT_APP_API_URL=http://localhost:8080
REACT_APP_WS_URL=http://localhost:8080
REACT_APP_DEBUG=true
REACT_APP_JWT_STORAGE_KEY=tta_access_token
REACT_APP_REFRESH_TOKEN_KEY=tta_refresh_token

# Vite Configuration (if using Vite)
VITE_API_BASE_URL=http://localhost:8080
VITE_SHARED_COMPONENTS_URL=http://localhost:3001

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Core Features
FEATURE_AI_NARRATIVE=true
FEATURE_LIVING_WORLDS=true
FEATURE_CRISIS_SUPPORT=true
FEATURE_REAL_TIME_MONITORING=true

# Model Management Features
FEATURE_MODEL_MANAGEMENT=true
FEATURE_LOCAL_MODELS=false
FEATURE_CLOUD_MODELS=true

# Advanced Features
FEATURE_PREDICTIVE_ANALYTICS=false
FEATURE_EHR_INTEGRATION=false
FEATURE_MOBILE_APPS=false

# =============================================================================
# THERAPEUTIC CONFIGURATION
# =============================================================================

# Crisis Detection
CRISIS_DETECTION_ENABLED=true
CRISIS_HOTLINE_NUMBER=988
CRISIS_TEXT_NUMBER=741741
EMERGENCY_NUMBER=911

# Therapeutic Settings
DEFAULT_THERAPEUTIC_INTENSITY=medium
THERAPEUTIC_SAFETY_THRESHOLD=7.0
SESSION_TIMEOUT_MINUTES=30
MAX_CONCURRENT_SESSIONS=100

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=INFO
DATABASE_LOG_LEVEL=WARNING
API_LOG_LEVEL=INFO

# Monitoring Tools
GRAFANA_PASSWORD=your_grafana_admin_password_here
PROMETHEUS_RETENTION_TIME=30d

# Sentry Configuration (Error Tracking and Performance Monitoring)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=1.0
SENTRY_PROFILES_SAMPLE_RATE=1.0
SENTRY_SEND_DEFAULT_PII=false
SENTRY_ENABLE_LOGS=true

# Health Checks
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Container Configuration
COMPOSE_PROJECT_NAME=tta-dev
CONTAINER_PREFIX=tta-dev

# Container Health Checks
STARTUP_WAIT_TIMEOUT=120
MAX_HEALTH_RETRIES=8

# =============================================================================
# MCP (Model Context Protocol) CONFIGURATION
# =============================================================================

# MCP Server Configuration
MCP_TRANSPORT=stdio
MCP_DEBUG=false

# Grafana MCP Server
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your_grafana_service_account_token_here

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# Development Features
ENABLE_GRAFANA=true
ENABLE_PROMETHEUS=true
ENABLE_REDIS_COMMANDER=true
DEBUG_CONTAINERS=false

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=true
PROFILING_ENABLED=false

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_RETENTION_DAYS=30

# Maintenance Windows
MAINTENANCE_WINDOW_START=02:00
MAINTENANCE_WINDOW_END=04:00
MAINTENANCE_TIMEZONE=UTC

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test Database Configuration
TEST_DATABASE_URL=postgresql://tta_user:your_secure_postgres_password_here@localhost:5432/tta_test_db
TEST_REDIS_URL=redis://localhost:6379/1
TEST_NEO4J_URI=bolt://localhost:7687

# Mock Services
MOCK_OPENAI_API=false
MOCK_EMAIL_SERVICE=true
MOCK_SMS_SERVICE=true

# =============================================================================
# ORGANIZATION SETTINGS
# =============================================================================

# Organization Information
ORGANIZATION_NAME=TTA Healthcare Platform
SUPPORT_EMAIL=support@example.com
SUPPORT_PHONE=+1-800-TTA-HELP

# Timezone and Locale
TIMEZONE=UTC
LOCALE=en_US.UTF-8

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Update all placeholder values with actual secure values
#
# 3. Generate secure passwords and keys:
#    - Use strong passwords (minimum 16 characters)
#    - Generate encryption keys: openssl rand -base64 32
#    - Create unique JWT secret: openssl rand -base64 64
#
# 4. Get API keys:
#    - OpenRouter: https://openrouter.ai (free tier available)
#    - OpenAI: https://platform.openai.com/api-keys
#    - Anthropic: https://console.anthropic.com/
#
# 5. Set up monitoring:
#    - Create Grafana service account and API key
#    - Configure Prometheus if needed
#
# 6. Never commit the actual .env file to version control!

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Replace ALL placeholder values with actual secure values
# - Use environment-specific files for different deployments
# - Store sensitive values in secure key management systems in production
# - Regularly rotate passwords and API keys
# - Enable audit logging for sensitive operations
# - Use strong, unique passwords for each service
# - Consider using Docker secrets or Kubernetes secrets in production
